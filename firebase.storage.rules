rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // Base function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Function to check if the path matches the user's ID
    function isUserPath(userId) {
      return request.auth.uid == userId;
    }

    // Function to validate content type
    function isValidContentType() {
      return request.resource.contentType.matches('image/.*') || 
             request.resource.contentType.matches('video/.*');
    }

    // Function to validate file size (max 20MB)
    function isValidSize() {
      return request.resource.size <= 20 * 1024 * 1024;
    }

    // Posts images rules
    match /posts/images/{userId}/{fileName} {
      allow read: if true;  // Anyone can read images
      allow write: if isAuthenticated() 
                  && isUserPath(userId)
                  && isValidContentType()
                  && isValidSize();
    }

    // Posts videos rules
    match /posts/videos/{userId}/{fileName} {
      allow read: if true;  // Anyone can read videos
      allow write: if isAuthenticated() 
                  && isUserPath(userId)
                  && isValidContentType()
                  && isValidSize();
    }
  }
} 