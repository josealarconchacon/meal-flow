rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isValidContentType(contentType) {
      let validTypes = [
        'image/jpeg',
        'image/png',
        'image/gif',
        'image/webp',
        'video/mp4',
        'video/quicktime',
        'video/webm'
      ];
      return contentType in validTypes;
    }

    function isValidFileSize(size) {
      let maxSize = 100 * 1024 * 1024; // 100MB max file size
      return size < maxSize;
    }

    // Post media rules
    match /posts/{type}/{postId}/{fileName} {
      allow read: if true;
      allow create: if isAuthenticated()
        && isValidContentType(request.resource.contentType)
        && isValidFileSize(request.resource.size)
        && (type == "images" || type == "videos" || type == "thumbnails");
      allow delete: if isAuthenticated();
    }

    // Allow anyone to read profile photos
    match /profile-photos/{userId} {
      allow read: if true;
      allow write: if request.auth != null 
                   && request.auth.uid == userId
                   && request.resource.contentType.matches('image/.*')
                   && request.resource.size < 5 * 1024 * 1024;
    }

    // Deny access to all other paths
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
} 